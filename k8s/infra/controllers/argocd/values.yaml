configs:
  secret:
    extra:
      dex.authentik.clientSecret: ${AUTHENTIK_OIDC_CLIENT_SECRET}
  cm:
    create: true
    application.resourceTrackingMethod: annotation+label
    admin.enabled: false
    url: https://argocd.beans.lan
    dex.config: |
      connectors:
      - config:
          issuer: https://authentik.beans.lan/application/o/argocd/
          clientID: Pab7eEQ2ZxhYnlcLSyCd7ABQQJX4gmVxaix5zoYu
          clientSecret: $dex.authentik.clientSecret
          redirectURI: https://argocd.beans.lan/api/dex/callback
          insecureEnableGroups: true
          insecureSkipVerify: true 
          scopes:
            - openid
            - profile
            - email
        name: authentik
        type: oidc
        id: authentik
  cmp:
    create: true
    plugins:
      kustomize-build-with-helm:
        generate:
          command: [sh, -c]
          args: [kustomize build --enable-helm]
  params:
    controller.diff.server.side: true
    server.insecure: true
  rbac:
    policy.csv: |
      g, argocd admins, role:admin
      p, role:admin, *, *, */*, allow
  crds:
    install: true
    # -- Keep CRDs on chart uninstall
    keep: false

  controller:
    resources:
      requests:
        cpu: 100m
        memory: 700Mi
      limits:
        memory: 4Gi

  dex:
    enabled: true
    resources:
      requests:
        cpu: 10m
        memory: 32Mi
      limits:
        memory: 128Mi

  redis:
    resources:
      requests:
        cpu: 100m
        memory: 64Mi
      limits:
        memory: 1Gi

  server:
    resources:
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        memory: 1Gi

  repoServer:
    volumes:
      - name: custom-tools
        emptyDir: {}
      - name: cmp-kustomize-build-with-helm
        configMap:
          name: argocd-cmp-cm
      - name: cmp-tmp
        emptyDir: {}
    initContainers:
      - name: copyutil
        command: ["/bin/bash", "-c"]
        args:
          - |
            /bin/cp -n /usr/local/bin/argocd /var/run/argocd/argocd-cmp-server &&
            /bin/cp -n /usr/local/bin/kustomize /var/run/argocd/kustomize &&
            /bin/cp -n /usr/local/bin/helm /var/run/argocd/helm
        volumeMounts:
          - mountPath: /var/run/argocd
            name: custom-tools
    extraContainers:
      - name: kustomize-build-with-helm
        env:
          - name: PATH
            value: "/var/run/argocd:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        command: [argocd-cmp-server]
        image: alpine/git:2.40.1
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
        volumeMounts:
          - mountPath: /var/run/argocd
            name: custom-tools
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          - mountPath: /home/argocd/cmp-server/config/plugin.yaml
            name: cmp-kustomize-build-with-helm
            subPath: kustomize-build-with-helm.yaml
          - mountPath: /tmp
            name: cmp-tmp

  applicationSet:
    resources:
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        memory: 1Gi

  notifications:
    enabled: false
    resources:
      requests:
        cpu: 100m
        memory: 64Mi
      limits:
        cpu: 1000m
        memory: 128Mi
